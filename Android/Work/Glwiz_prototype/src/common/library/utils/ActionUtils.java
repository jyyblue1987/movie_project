package common.library.utils;import android.app.Activity;import android.content.Context;import android.view.MotionEvent;import android.view.View;import android.view.View.OnTouchListener;import android.view.ViewGroup;import android.view.WindowManager;import android.view.inputmethod.InputMethodManager;import android.widget.EditText;public class ActionUtils {	public static void hideKeyboardOutSideEditBox(View view, final Activity context) {	    //Set up touch listener for non-text box views to hide keyboard.	    if(!(view instanceof EditText)) {	        view.setOnTouchListener(new OnTouchListener() {	            public boolean onTouch(View v, MotionEvent event) {	                closeSoftKeyboard(v, context);	                return false;	            }	        });	    }	    //If a layout container, iterate over children and seed recursion.	    if (view instanceof ViewGroup) {	        for (int i = 0; i < ((ViewGroup) view).getChildCount(); i++) {	            View innerView = ((ViewGroup) view).getChildAt(i);	            hideKeyboardOutSideEditBox(innerView, context);	        }	    }	}		public static void closeSoftKeyboard(View v, Activity context) {				if (context != null) {			InputMethodManager imm = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);			if (imm.isActive() ) {				if( v != null )					v.clearFocus();				context.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);				if( v != null )					imm.hideSoftInputFromWindow(v.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);			}		}	}}